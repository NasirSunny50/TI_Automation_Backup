<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.10.9 on win32)" generated="20230302 15:06:06.161" rpa="false" schemaversion="3">
<suite id="s1" name="Test" source="d:\Github\TI_Automation_Backup\IAM\Service Automation\Robot Framework\test.robot">
<test id="s1-t1" name="Example Test Case" line="12">
<kw name="Get OAuth2 Token">
<var>${auth_token}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${auth_url}</var>
<arg>${base_url}/oauth2/token</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230302 15:06:06.302" level="INFO">${auth_url} = http://tiger-iam.com/iam/oauth2/token</msg>
<status status="PASS" starttime="20230302 15:06:06.301" endtime="20230302 15:06:06.305"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_headers}</var>
<arg>Content-Type</arg>
<arg>application/x-www-form-urlencoded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230302 15:06:06.306" level="INFO">${auth_headers} = {'Content-Type': 'application/x-www-form-urlencoded'}</msg>
<status status="PASS" starttime="20230302 15:06:06.305" endtime="20230302 15:06:06.306"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${auth_data}</var>
<arg>grant_type=password</arg>
<arg>client_id=${client_id}</arg>
<arg>client_secret=${client_secret}</arg>
<arg>username=${username}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230302 15:06:06.307" level="INFO">${auth_data} = {'grant_type': 'password', 'client_id': 'fqtz8UnL2sFfKcVZGgoMvzf3kmWEdfkE', 'client_secret': 'MZcgtYtOOxigj02Q2CAIZeHodACRT825OdLZGDCqAruPY2MJxH6dS4xreVcGiedX', 'username': 'sunny@yopmail.com', 'passw...</msg>
<status status="PASS" starttime="20230302 15:06:06.306" endtime="20230302 15:06:06.307"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${auth_response}</var>
<arg>alias</arg>
<arg>${auth_url}</arg>
<arg>headers=${auth_headers}</arg>
<arg>data=${auth_data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230302 15:06:06.307" level="FAIL">Non-existing index or alias 'alias'.</msg>
<status status="FAIL" starttime="20230302 15:06:06.307" endtime="20230302 15:06:06.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${auth_token}</var>
<arg>${auth_response.json()['access_token']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230302 15:06:06.309" endtime="20230302 15:06:06.309"/>
</kw>
<status status="FAIL" starttime="20230302 15:06:06.300" endtime="20230302 15:06:06.310"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias</arg>
<arg>${base_url}/admin/apis?startFrom=0&amp;maxCount=10</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="NOT RUN" starttime="20230302 15:06:06.314" endtime="20230302 15:06:06.314"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>example</arg>
<arg>/api/example</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20230302 15:06:06.315" endtime="20230302 15:06:06.316"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20230302 15:06:06.318" endtime="20230302 15:06:06.319"/>
</kw>
<doc>Test the Example API endpoint with OAuth2 Authorization</doc>
<tag>api</tag>
<status status="FAIL" starttime="20230302 15:06:06.299" endtime="20230302 15:06:06.323">Non-existing index or alias 'alias'.</status>
</test>
<status status="FAIL" starttime="20230302 15:06:06.165" endtime="20230302 15:06:06.326"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">api</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
